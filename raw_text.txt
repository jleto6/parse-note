**Binary Conversions**

**In the modern world,** we use decimal, or base 10, notation to represent integers. We can represent numbers using any base b, where b is a positive integer greater than 1.

**Base 10:**
- When we write 965, this can be translated as: \(9 \cdot 10^2 + 6 \cdot 10^1 + 5 \cdot 10^0\)
- More generally, \(n = a_k \cdot b^k + a_{k-1} \cdot b^{k-1} + ... + a_1 \cdot b^1 + a_0 \cdot b^0\), \(a_i, b, a_j, 0 \leq a_i < b\)

**Base b:**
- Let b be a positive integer greater than 1. Then if n is a positive integer, it can be expressed uniquely in the form \(a_k \cdot b^k + a_{k-1} \cdot b^{k-1} + ... + a_0 \cdot b^0\), where k is a nonnegative integer and \(a_k, a_{k-1}, ... , a_0\) are nonnegative integers less than b.
- This expression of n is called the base b expansion of n and can be denoted by \((a_k a_{k-1} ... a_0)_b\).

**Binary Operations**
- Computers represent integers and do arithmetic with binary (base 2) expansions of integers. In these expansions, the digits used are 0 and 1.
- Example: What is the decimal expansion of the integer that has 11011_2 as its binary expansion?
- Solution: \( (11011)_2 = 1\cdot 2^4 + 1\cdot 2^3 + 0\cdot 2^2 + 1\cdot 2^1 + 1\cdot 2^0 \)
  - \(= 16 + 8 + 0 + 2 + 1\)
  - \(= 27\)

**Base Conversion:**
- To construct the base b expansion of the integer n, divide n by b to obtain a quotient and remainder: \(n = b \cdot q_0 + a_0\), where \(0 \leq a_0 < b\).
  - The remainder, a_0, is the rightmost digit in the base b expansion of n.
- Next, divide q_0 by b to obtain \(q_0 = b \cdot q_1 + a_1\), \(0 \leq a_1 < b\).
  - a_1 is the second digit from the right in the base b expansion of n.
- Continue by successively dividing the quotients by b, obtaining the digits in the base b expansion as the remainder. The process terminates when the quotient is 0.
Cache Cache on hit ond mss A is” quick» bt miss con chs For exanpe, if the cache miss cote is ord the data cache mas rate is 47, wilh base CPI of 2 ond a mis of (00 we cam the mss as Glows = mar 0.02 +100=2 = D-cache mss Cth 36% oF loads and 6.0¢ = Total 346 Ths in 0 CPT of 5.44 2+ wis Tn an ideal with a cache (no mises), He CPU cn al the CPT of 2. the CPL ths He CPU veld be 2.72 fe te menny Tf we CPL by halt, the CPL beams 4.44. Menory remain a of the overall CPI, shoving how the CPL aloe

The image contains typed notes about "Caches" in computing. Here is the transcription:

---

**Caches**

In an ideal computing system there would be unlimited fast memory access. However such a system is not practically achievable. Instead a memory hierarchy provides the illusion of large amount of fast memory by organizing different types of storage to optimize speed and access.

The principal of locality refers to the observation that programs tend to access only a small portion of their address space at any given time, which is crucial to optimizing the memory hierarchy. There are 2 main types of locality: 

1. **Temporal locality**: Refers to the tendency of programs to access the same memory locations repeatedly within a short period. For example, instructions in loops and function variables.

2. **Spatial locality**: Denotes the likelihood of accessing memory locations close to those recently accessed. This occurs in sequential instruction access and accessing array data.

Understanding these principals helps in designing cache systems and hardware to enhance performance.

**Memory Hierarchy Levels**

- Cache levels include smaller, faster memory that is closer to the processor.
- **Data** moves through the levels — from input and secondary storage to memory and through to the processor — from permanent storage (like SSD or HDD) to main memory (DRAM), and then to smaller, faster cache (SRAM) near the CPU.
- Data is moved between levels in blocks, which may be multiple words wide. This is a key concept in managing memory transitions.
- Caches are used to store frequently accessed data closer to the processor, minimizing access times and improving speed.

Cache memory is the closest level of memory hierarchy to the CPU. It serves to satisfy either the most frequently or recently accessed data.

A hit occurs when accessed data is present in the upper memory level, and a miss occurs when it is not. The task of a memory hierarchy and cache system is to maximize hit rates.

---

These notes describe the importance of memory hierarchy, the principle of locality, types of locality, and how caches function in computing systems to improve performance.
The image is blank, containing no visible content. If you intended to upload or describe an image with content such as a diagram, chart, graph, or handwritten notes, please try again.
Control Signals

Datapath with Control 
Examples

Control Signal Overview

**Exceptions and Interrupts**

"Unexpected" events such as exceptions and interrupts require altering control flow. Exceptions occur within the CPU, e.g., undefined opcodes or overflows, while interrupts arise from external I/O controllers. For example, an I/O controller might send an interrupt when a disk finish reading data, prompting the CPU to switch context to a waiting process.

In MIPS, exceptions are handled by the System Control Coprocessor (CP0), saving the program counter in the Exception Program Counter (EPC), indicating problems in the status register.

The exception handling process involves reading the cause, transferring control to the appropriate handler, and determining required actions. If resolvable, corrective measures are taken; otherwise, the program is terminated, using the EPC to correct errors.

Pipeline exceptions introduce another form of control hazard. For example, overflow during the execution stage requests premature register overwrite. Delays in handling instructions and instructing the control of the handler. This approach is similar to handling mispredictions. The PC holds the instruction, requiring  in pipeline, simulating execution in parallel as a speculative address anticipation through subsequent stages. This is typically done through the architecture.

Challenges arise when instructions depend on accelerator, caching, double hazards. Pitfalls in pipeline usually came from memory hazards!! That is, when a program on CPU accessing pipelining harder to be issues like actual memory operand as architectures unexpectedly change registers, and instruction halt depend on memory.
Block Diagram
1 scan
Combinatinal vs Sequential
1 scan
Block Diagram
1 scan
Combinatinal vs Sequential
1 scan

Logic Gates
3 scans
Adder
4 scans
Logic Gates
3 scans
Adder
4 scans

Sure, here's the transcription of the handwritten notes:

---

**Canonical Forms**

Canonical forms are standardized ways to express Boolean functions, making it easier to build and simplify circuits. The 2 main types are Sum of Products (SOP) and Product of Sums (POS), which describe when a circuit should output a 1 or a 0.

SOP expressions are built from minterms, which represent truth table rows where the output is 1, while POS expressions are built from maxterms, which represent rows where the output is 0.

**Sum of Products:**
- SOP uses minterms:
  - Look at rows where F = 1 in the truth table
  - Each 1 becomes an ANDed term (A'B'C)
  - OR all AND terms together

For example, if F = 1 at (A=0, B=1, C=0), the minterm is A'BC'.

**Product of Sums:**
- POS uses maxterms:
  - Look at rows where F = 0 in the truth table
  - Each 0 becomes an ORed term (A'+B+C)
  - AND all the OR terms together

For example, if F = 0 at (A=1, B=0, C=1), the maxterm is A'B+C'.

---
**CPU Performance**

A clock cycle is a single tick of the CPU's internal clock, during which a basic instruction can be carried out. The CPU uses this regular pulse to synchronize and control the execution of instructions.

- **Clock Period:** The time duration of one cycle
- **Clock Frequency:** How many cycles occur per second

**CPU Time = amount of CPU clock cycles x Clock Cycle Time (Period)**  
or  
**CPU Time = amount of CPU clock cycles / Clock Rate (Frequency)**

Execution Time is further defined by instruction count, the total number of instructions a program executes, and Cycles Per Instruction (CPI). The CPI reflects how different instructions consume varied cycles, which reflects the CPU's design, and is affected by the instruction mix (proportion of different types of instructions).

The composition of CPU performance includes the equation:

**CPU Time = Instruction Count x CPI x Clock Cycle**

This formula is important because it connects various core components of performance and insight into how efficiency can be optimized.

Components of performance include:

- **Instruction Count:** The number of instructions executed by the CPU.
- **Clock Cycle:** Typical document is part of system specifications. It defines the duration of one cycle of each clock tick in the CPU.
- **Cycles Per Instruction (CPI):** An average measurement reflecting the mean number of cycles taken for instructions of the program. This highlights which is the frequency and type combination of instructions being executed.

CPI in more detail highlights the mixed queues where each instruction type frequency and cycle cost contributes to the overall CPI.

---

**CPI Example**

- **Instruction Sequence:**
  - Instruction Type: Load
  - Instruction Count: 2
- **CPI:** 2
- **Clock Period:** 2 ns (nanoseconds)
- **Overall time for execution:** 8 ns
Certainly! Here is the transcription of the handwritten notes:

---

**Hazards**

Hazards are situations that prevent the next instruction in the pipeline from executing in the next cycle.

**Structure Hazards** arise when there is a conflict for the use of a resource. Load/Store operations require data access, causing the instruction fetch to stall until they complete.

**Data Hazards** occur when an instruction depends on the completion of data access by a previous instruction. For example, if the instructions had `$t0, $t1` followed by `sb $t2, $t0($t3)`, the latter must wait for the former to complete.

**Forwarding (Bypassing)** passes a computed result from one stage to another, avoiding the wait for register storage and reduces stalls.

A load-use hazard occurs when an instruction depends on a value being loaded by a previous instruction before it is available. They can always be avoided by forwarding. For example, `lw $t0, 20($s1)` and `add $t2, $t0, $s3`. The second instruction must wait for the 1st unless resolved with forwarding.

**Code Scheduling** involves reordering instructions to avoid the use of a load result in the subsequent instruction.

**Stall on Branch:** To mitigate control hazards, waiting until the branch outcome is determined before fetching the instruction is an approach but it introduces stalls.

**Branch Prediction** guesses the outcome of branch instructions, which helps decide whether to fetch the next instruction or branch target early.

**Predict Taken** both taken reduces control hazard cost by assuming which is efficient when misprediction penalties are low.

**Delayed Branch** all delayed branches are predicted as not branch, and branch delay slot is not taken.
Here is the transcription of the handwritten text:

---

**Writing**

A cache must manage how data is written. This involves deciding whether to update main memory immediately or delay a write, and how to handle write misses. These choices affect consistency, performance, and capacity.

When the CPU performs a store instruction, it writes data to memory. With a cache in place, this raises the issue of whether the write goes to cache, main memory, or both. If data is only written to the cache, main memory may have a different value, causing inconsistency.

**Write Strategy:**

- Write-through updates both cache and main memory simultaneously. It’s simple but slow - a write buffer is often used to reduce stalls.
- Write-back only updates the data in the cache during a write hit; main memory is not updated right away. Each block is tagged with a dirty bit to indicate if it has been modified since being loaded from memory. If a block is clean, it can be replaced without writing to memory. If a block is dirty, it must be written back to memory before being replaced.
Direct Caching

Associativity

**Floating Point Arithmetic**

Real numbers are called "float" values in computing. Floating point arithmetic is the method computers use to handle real numbers.

Floats are represented using the IEEE 754 standard, which ensures accuracy, mostly by storing numbers using the principle of normalized scientific notation.

**IEEE 754 represents floating-point numbers using 3 components**: a sign bit, an exponent, and a mantissa. To store numbers efficiently, IEEE 754 defines normalized form, meaning the first digit before the decimal is always 1 in binary (1.xxx * 2^y).

Since this leading 1 is always present, IEEE 754 does not store it explicitly. (This is called the hidden bit.) Instead, only the fractional part is stored, allowing the mantissa to hold more precision within the available bits.

This differs from standard scientific notation where the leading digit is always explicitly written (e.g., 1.23 x 10^6 in decimal). By enforcing normalization and using a hidden bit, IEEE ensures efficient storage and greater accuracy in floating point precision.

A floating-point number is always represented by:
- 1 sign bit (s) : determines whether the number is positive (0) or negative (1).
- Exponent (e) : determines how much to shift the binary point (stored using a biased form).
- Mantissa or fraction: (with an assumed 1)

### Exponential Notation

- Ex: The following are equivalent representations of 1.234
  - Scientific: 1.234 * 10^0
  - Exponential: 0.1234 * 10^1

### IEEE 754 Standard
- Single precision (32 bits), consisting of:
  - 1 sign bit
  - 8 exponent bits
  - 23 fraction bits
- Double precision (64 bits), consisting of:
  - 1 sign bit
  - 11 exponent bits
  - 52 fraction bits

### Floating Point: Normalized Scientific Notation

- Always results in the leading digit being 1
- Stored with hidden form efficiency

### Diagram Boxes (Visual Information)

1. **IEEE 754 Standard Box**
   - Describes bit allocation for single and double precision.

2. **Floating Point: Normalized Scientific Notation Box**
   - Explains hidden bit usage for efficient storage.

This note covers the essential understanding of floating-point arithmetic in computing, emphasizing the IEEE 754 standard and normalized scientific notation.
  MAC2311 Name: Linear Worksheet F Summary    ‘This worksheet is graded on completion, You must complete the entire worksheet to eam any credit. You ‘answers do not have to be correct. Of course, it is better i they are, but the purpose of the this workshect isthe you master the material, Ifyou arent sure about the mathematical steps, you can the process or support your solution by writing an explanation. [Avalue of sinh x or cosh xis given. Use the definitions and the identity find the value ofthe other indicated hyperbolic function,     4 (c_) 5 5 ag    Rewrite the expression in terms of exponentials and simplify the results.              | 4) (sinh x + cosh x)> ane | of ne Find the derivative ofy. (ry x8 — | Dp ol)   cosh D) 7x |    

        (sinh 9x) 1 Find the derivative of y with respect to the appropriate variable. ofA 9 B y= (0 +4) » (8 +50 006 (04) | bd | ax |   1) Verify the identity using the definitions of hyperbolic functions. 1 coth x = 12) Use the fundamental identity cosh2 x ~ sinh? x= 1 to verify the identity. tanh? x = sech? x 13) Derive the formula given that (cosh x) = sinh x and (sinh x) = cosh x. (coth x) = x

Find the linearization L(x) of f(x) at x= a. 1 f(x) = 3x2        |     the relationship between a small change in x and the corresponding change in y in the form dy = dx.              Use the differential to approximate the quantity to four decimal places. 1) In 1.07 | | 19) raised to the power 0.49) »(D 20) | 8) 10.1000 99300 1) 11.0000

Answer Key ‘Testname; MAC 2311 CANVAS WS #6 - HYBERBOLICS & LINEAR APPROXIMATIONS ye 2A 3)A aA              4 coy) wa

Here is the transcription of the handwritten notes:

---
**MAC 8311 Hyperbolics & Linear Approx. Worksheet #5 A**

**Solutions**

1. \[
\begin{align*}
\text{Given: } & \sinh(x) = -\frac{4}{3} \\
& \cosh^2(x) - \sinh^2(x) = 1 \\
& \cosh^2(x) - \left(-\frac{4}{3}\right)^2 = 1 \\
& \cosh^2(x) - \frac{16}{9} = 1 \\
& \cosh^2(x) = 1 + \frac{16}{9} = \frac{25}{9} \\
& \cosh(x) = \pm \frac{5}{3} \quad (C) \\
\end{align*}
\]
**Our goal: \(\tanh(x)\)**

**Identity**:  
\[
\tanh(x) = \frac{\sinh(x)}{\cosh(x)}
\]

\[
\tanh(x) = \frac{-\frac{4}{3}}{\frac{5}{3}} = -\frac{4}{5}
\]
The boxed result: \(-\frac{4}{5} \Rightarrow \tanh(x)\)

2. \[
\begin{align*}
\text{Given: } & \sinh(x) = \frac{8}{15} \\
& \cosh^2(x) - \sinh^2(x) = 1 \\
& \cosh^2(x) - \left(\frac{8}{15}\right)^2 = 1 \\
& \cosh^2(x) = 1 + \frac{64}{225} = \frac{289}{225} \\
& \cosh(x) = \pm \frac{17}{15} \quad (A)
\end{align*}
\]

**Goal: \(\sech(x)\)**

**Identity**:  
\[
\sech(x) = \frac{1}{\cosh(x)}
\]

The boxed result:  
\[
\sech(x) = \frac{15}{17}
\]
---
The image contains handwritten mathematical notes. Here's the transcription:

---

3. \[ \sinh{(4 \frac{x}{a})} \]

   \[ \text{Defn. } \sinh{(x)} = \frac{e^x - e^{-x}}{2} \]

   \[ \Rightarrow \sinh{(4 \frac{x}{a})} = \frac{e^{4 \frac{x}{a}} - e^{-4 \frac{x}{a}}}{2} \]

   \[ = \frac{e^{\frac{4x}{a}} - e^{-\frac{4x}{a}}}{2} = \frac{x^4 - x^{-4}}{a} \]

   \[ = \frac{a}{x^4} \]

   \[ \boxed{\text{A}} \]

4. \[ \left( \sinh{(x)} + \cosh{(x)} \right)^3 \]

   \[ \sinh{(x)} = \frac{e^x - e^{-x}}{2} \quad \cosh{(x)} = \frac{e^x + e^{-x}}{2} \]

   \[ \Rightarrow \frac{e^x - e^{-x}}{2} + \frac{e^x + e^{-x}}{2} = \frac{2e^x}{2} = e^x \]

   \[ \boxed{\text{A}} \]

5. \[ y = \cos{(gx)} \]

   \[ \frac{d}{dx} \left( \cos(gx) \right) = \sinh{(gx)} \cdot g'(x) \]

   \[ y' = \sinh{x^5} \cdot 5x = 5x^4 \sinh{(x^5)} \]

   \[ \boxed{\text{C}} \]

---
The image contains handwritten notes with mathematical calculations. Below is the transcription of the text:

---

\[ 
\boxed{6} \quad y = \sinh^2 (7x) = (\sinh(7x))^2 
\]

\[
\frac{d}{dx}(\sinh(\varphi(x))) = \cosh(\varphi(x)) \cdot \varphi'(x)
\]

\[
y' = 2 \left(\sinh(7x)\right)^1 \cdot \frac{d}{dx}\left(\sinh(7x)\right)
\]

\[
= 2(\sinh(7x))^1 \cdot \cosh(7x) (7)
\]

\[ 
y' = 14 \cosh(7x) \sinh(7x) \quad \boxed{D} 
\]

---

\[ 
\boxed{7} \quad y = \ln(\sinh(\varphi(x)))
\]

\[
y' = \frac{1}{\sinh(\varphi(x))} \cdot \frac{d}{dx} (\sinh(\varphi(x)))
\]

\[
y' = \frac{\cosh(\varphi(x))}{\sinh(\varphi(x))} \cdot \varphi'(x)
\]

\[
y' = \frac{\cosh(\varphi(x))}{\sinh(\varphi(x))} = \coth(\varphi(x))
\]

\[ 
y' = \frac{9 \coth(4x)}{9} = \coth(4x) \quad \boxed{B} 
\]

---

\[ 
\boxed{2} \quad y = \sinh^{-1}(\varphi(x))
\]

\[
\frac{d}{dx} (\sinh^{-1}(\varphi(x))) = \frac{1}{\sqrt{1+(\varphi(x))^2}} \cdot \varphi'(x)
\]

---

\[ 
y' = \frac{1}{\sqrt{1+(4x)^2}} \, = \, \frac{d}{dx} \, (4x) \cdot \frac{1}{\sqrt{}}
\]

---

The equations involve differentiation of hyperbolic functions, logarithmic functions, and their applications.
The image contains handwritten notes with mathematical expressions. Below is the transcription:

---

8) \[ \boxed{\text{continued}} \]

\[ y' = \frac{-1}{\sqrt{1+9x}} \cdot y^2 \cdot 9 \]

\[ y = -\frac{1}{\sqrt{1+9x}} \]

\[ y' = \frac{9}{2\sqrt{1+9x}} \]

\[ y' = \frac{2\sqrt{x}}{2\sqrt{x} \cdot (4-x)} \]

\[ y' = \frac{2\sqrt{x}}{(4-x) \cdot \boxed{A}} \]

---

9) \[ y = (20 + 50) \tanh^{-1} (\Theta + 4) \]

\[ \boxed{\text{product rule}} \]

\[ \frac{d}{dx} \left[ \tanh^{-1} (hx) \right] = \frac{1}{1-(hx)^2} \cdot h(x) \]

\[ f^1 = 20 + 50 \quad \mathcal{X} \quad g^2 = \tanh^{-1} (\Theta + 4) \]

\[ f' = 20 + 55 \quad g' = \frac{1}{1-(\Theta + 4)^2} \cdot \frac{d}{d\Theta} \]

\[ y' = (20 + 55) \tanh^{-1} (\Theta + 4) + \frac{\Theta + 50}{1-(\Theta+4)^2} = \]

\[ y' = (20 + 55) \tanh^{-1} (\Theta + 4) + \frac{\Theta + 50}{-(1-80+16)} \]

\[ \quad = (20 + 55) \]

\[ \quad = (20 + 55) = [20 - 16] \]

\[ \quad \Theta = 80 - 15 \]

---
The image contains handwritten notes. Here's the transcription:

---

9. **continued**

\[ y' = (20+5) \tanh^{-1}(\theta + 4) + \frac{\Theta(10 + 5)}{(e)(\theta + 5)} \]

\[ y' = (20+5) \tanh^{-1}(\theta + 4) + \frac{0 - -}{0 + 0} \]

\[ \boxed{\text{B}} \]

---

10. \[ y = 9 \tanh^{-1}(\cos x) \]

\[ \frac{d}{dx} \left( \tanh^{-1}(hx) \right) = \frac{1}{1-(hx)^2} \cdot h'(x) \]

\[ y' = 9 \left( \frac{1 - (\cos x)^2}{\cdots} \right) \frac{d}{dx}(\cos x) \]

\[ = -\sin x / -\sin x \]

\[ y' = \left( \frac{-\sin x}{\cdots} \right) = \frac{-9 \sin x}{\sin x} \]

\[ \boxed{\text{B}} \]

---

11. \[ \coth(x) = \frac{e^x + e^{-x}}{e^{x} - e^{-x}} \]

**verify the identity**

\[ \coth(x) = \frac{\cosh(x)}{\sinh(x)} = \frac{\frac{e^x + e^{-x}}{2}}{\frac{e^x-e^{-x}}{2}} \]

\[ = \frac{e^x + e^{-x}}{e^x - e^{-x}} = \frac{e^x \cdot e^{-x} +}{e^x - e^{-x}} = \] 

\[ = \frac{e^x \cdot e^{-x} +}{e^x - e^{-x}} = \frac{e^x \cdot e^{-x}}{e^x - e^{-x}} \]

---
Here is the transcription of the handwritten notes:

---

11. continued

\[ e^x - e^{-x} = \frac{x}{1} = \frac{2x}{1} \]
\[ e^x - e^{-x} = \frac{x}{e^x} \left(\text{highlighted box around} \frac{2x}{e^x}\right) \]

---

12. verify the identity

\[ 1 - \tanh(x) = \text{sech}(x) \]

\[ \frac{1 - \sinh(x)}{\cosh(x)} = \text{sech}(x) \]

use \[ \cosh^2(x) - \sinh^2(x) = 1 \]

\[ \cosh^2(x) - \sinh^2(x) = \text{sach}^2(x) \]

\[ \frac{\cosh(x)}{\cosh(x)} \]

\[ \frac{\cosh^2(x)}{\cosh^2(x)} = \text{sech}^2(x) \]

---

13. verify \[ \frac{d}{dx} \left( \coth(x) \right) = -\text{csch}^2(x) \]

\[ \frac{d}{dx} \left( \frac{\cosh(x)}{\sinh(x)} \right) \] quotient rule \( \frac{f'g - gf'}{g^2} \)

\[ f = \cosh(x) \quad g = \sinh(x) \]

\[ f' = \sinh(x) \quad g' = \cosh(x) \]

\[ \frac{\sinh(x) \times \sinh(x) - \cosh(x) \times \cosh(x)}{\sinh^2(x)} = \frac{-1}{\sinh^2(x)} \]

\[ = -\text{csch}^2(x) \]

---
Here's a transcription of the handwritten notes:

---

**Find the linearization (tangent line approximation)**

\( L(x) = f(a) + f'(a)(x-a) \)

1. \((14)\)

   \[
   f(x) = 3x^2 + 4x + 1 \text{ with } a = 3
   \]
   \[
   f'(x) = 6x + 4
   \]
   \[
   f(3) = 3(3)^2 + 4(3) + 1 = 40
   \]
   \[
   f'(3) = 6(3) + 4 = 22
   \]
   \[
   L(x) = f(a) + f'(a)(x-a)
   \]
   \[
   L(x) = 40 + 22(x-3)
   \]
   \[
   40 + 22x - 66 = \boxed{L(x) = 22x - 26} \quad \text{A}
   \]

2. \((15)\)

   \[
   f(x) = \sqrt{4x + 49} = (4x + 49)^{1/2} \text{ with } a = 0
   \]
   \[
   f'(x) = \frac{1}{2}(4x + 49)^{-1/2}(4) = \frac{2}{\sqrt{4x+49}}
   \]
   \[
   f(0) = \sqrt{4(0) + 49} = 7
   \]
   \[
   f'(0) = \frac{2}{7}
   \]
   \[
   L(x) = f(0) + f'(0)(x - 0)
   \]
   \[
   L(x) = 7 + \left( \frac{2}{7} \right) x
   \]
   \[
   \boxed{L(x) = \frac{2x}{7} + 7} \quad \text{B}
   \]

---
The image contains handwritten notes involving calculus, specifically differentiation. Here is the transcription of the text:

---

\( y = f(x) \) \(\rightarrow \frac{dy}{dx} = f'(x)\) \(\rightarrow dy = f'(x) dx\)

\( dx\) & \( dy\) represent small changes in \( x\) & \( y\).

\[ 16 \quad y = \frac{10x - 2}{5x - 2x} \]

\[
dy = \frac{10x - 2}{2} dx
\]

\[ 17 \quad y = \frac{1}{2}(5x + 8) \]

(Product rule) \( f(u) = q \times f \)

\[
\left(\frac{5x + 8}{2}\right) \frac{1}{2}(5x + 8)
\]

\( f \cdot f' = \frac{1}{2}\left(\frac{1}{2}(5x+8)^2\right) \)

\[ dy = \frac{5}{2} \cdot \frac{1}{2}(5x + 8) \]

\[ \frac{dy}{dx} = \left(\frac{5x + 8}{2}\right) \frac{1}{2}(5x + 8) = \frac{5x + 8}{2 \cdot 5x + 8} \]

\[
dy = \frac{2(5x + 8)}{2(5x + 8)} = \frac{10x + 16}{2(5x + 8)}
\]

\[
dy = \frac{25x + 16}{2(5x + 8)} = \frac{10x + 16 - 5x}{2(5x + 8)}
\]

\[
dy = \frac{15x + 16}{2(5x + 8)}
\]

\[
dy = \frac{15x + 16}{2(5x + 8)} dx
\]

---

These notes are solving and simplifying a derivative problem using the product rule and chain rule for differentiation.
Here is the transcription of the handwritten notes:

---

**Use Differentials for Approximations**

**Option #1**
- Find the linearization
  1) Identify the function f(x)
  2) determine a

**Option #2**
- Use dy = f'(x) to see how a small change in x affects y.

---

Circle labeled "18"

- approximate ln(1.07)

---

**Option #1**

\[ L(x) = f(a) + f'(a)(x-a) \]

\[ f(x) = \ln x \]

\[ f(a) = \ln 1 = 0 \]

\[ \ln (1.07) = ? \]

\[ f'(x) = \frac{1}{x} \]

\[ f'(a) = \frac{1}{1} = 1 \]

\[ a = 1 \; \text{(closest perfect value)} \]

---

So 

\[ f(x) \approx f(a) + f'(a)(x-a) \]

\[ f(x) \approx 0 + (1)(x-1) \]

\[ f(x) \approx x - 1 \]

---

Use this → we need \( x = 1.07 \)

\[ f(1.07) \approx 1.07 - 1 = 0.07 \]

Circle labeled "C"

--- 

These notes demonstrate the method of using differentials to approximate the natural logarithm of 1.07.
The image contains handwritten mathematical notes with calculations related to derivatives and linear approximation. Here is the transcription:

---

18. **option #2**

\[ \ln(1.07) = \ln(x+dx) \]

\[ x = a \]
\[ dx=0.7 \]

\[ f(x) = \ln x \]

\[ dy = f'(x) \cdot dx = \frac{1}{x} \]

\[ dx = \frac{1}{x} = \frac{1}{1} \]

\[ x = 1 \Rightarrow dy = \frac{1}{1}(0.7) = 0.7 \]

So when \( x \) increases by 0.7, \( y \) increases by 0.7.

\[ f(x+dx) = y \approx f(a) + dy \]

\[ with \]
\[ dy = f'(x)dx \]

\[ f(1+0.7) = f(1) + f'(1)(0.7) \]

\[ = 0 + (1)(0.7) \]

so \( f(1.07) = \frac{\ln (1.07)}{0.7} \)

hence another version of the linearization.

19. **Approximate \( e^{0.49} \)**

\[ \approx e \]

\[ \!option! 4 \]

\[ f(x) = e^x \]

\[ f(a)=e^a \rightarrow f'(x)=x =f'(a)=e^a \]

\[ f(0.5)=e^{0.5} \quad f(0.5)=e^{0.5} \]

\[ x=0.50 \]

\[ L(x) \approx f(x)\]

\[ = f(a) \rightarrow f'(a)(x-a) \]

\[ L(x) = e^{0.5} + e^{0.5}(x-0.5) \]

\[ x = e^{0.5} \]

\[ = e^{0.5} = e^{0.5} (1 + x -0.5) \]

\[ e^x = e^{0.5}(x+0.5) \]

\[ e^x = e^{0.5}(x+0.5) \]

---
Here is the transcription of the handwritten notes:

---

19 Continued

so \( e^x \approx e^{0.5} (x + 0.5) \)

\( e^{0.49} \approx e^{0.5} (0.49 + 0.5) \)

\[ = e^{0.5 (0.99)} = [1.63233] \]

\[ \boxed{D} \]

**Option 2.**

\( f(a+dx) \approx f(a) + dy \)

or

\( f(a+dx) \approx f(a) + f'(a) dx \)

\( e^{0.49} \)

\[ a = 0.50 \quad a=0.5 \]

\[ f(x) = e^x \]

\[ dx = -0.01 \quad f'(x) = e^x \]

\[ e^{0.49} \]

\[ f(0.5) + f'(0.5)(-0.01) \]

\[ = 0.5 e^{0.5} (-0.01) \]

\[ = e^{0.5} (1 - 0.01) \]

\[ = e^{0.5} (0.99) = e^{0.5 \times 0.99} \]

\[ = [1.6323] \]

**NOTE** 

When using differentials for 
approximations, the values f(a) & f'(a)
can usually be determined without
a calculator. That is not the case 
for problem #19.

\[ e^0.1 = \text{(Something we know.)} \]

However 0 is not close to 0.49, so using 0
would not be an accurate approximation.
The image contains handwritten notes with mathematical calculations related to derivatives and linearization. Below is the transcription:

---

Option

\( x_0 = 100 \)

\( 101 = 100 + 1 \)

\( \frac{dy}{dx} = \frac{1}{2\sqrt{x}} \)

\( f(x) = \sqrt{x} \)

\( x = 100 \)

dx = 1

\( f(x) = \sqrt{x} \approx f(a) + dy \quad \text{with} \quad dy = f'(a) dx \)

\( f(x) = \sqrt{x} = 100 = 10 \)

\( f'(x) = \frac{1}{2\sqrt{x}} = \frac{1}{2\cdot 10} = \frac{1}{20} \)

\( f(100) = \frac{100}{10} = 10 \)

\( 100 = 100 + 1 = 10 + \frac{1}{20} (1) = 10.05 \)

Option Linearizations

\( L(x) = f(a) + f'(a)(x-a) \)

101 = 100 + 1

\( f(x) = \sqrt{x} = \frac{1}{2} \)

\( f(x) = \sqrt{x} = \frac{1}{2} \)

\( f(100) = \frac{100}{10} = 10 \)

 \( f'(x) = \frac{1}{2\sqrt{x}} = \frac{1}{20} \)

\( L(x) = 5(100) + f'(100)(x-100) \)

\( x = 5 + \frac{x - 5}{20} = 5 \)

\( x = \frac{x-5}{20} \to \frac{20 + 5}{20} \)

\( \frac{x}{20} = \frac{101 + 5}{20} \)

\( \frac{50.5}{5} = 10.05 \)

---
