```markdown
Binary Conversions

In the modern world, we use decimal, or base 10, notation to represent integers. We can represent numbers using any base b, where b is a positive integer greater than 1.

Base 10:
- When we write 965, this can be translated as : 9·10^2 + 6·10^1 + 5·10^0

Base b:
- Let b be a positive integer greater than 1. Then if n is a positive integer, it can be expressed uniquely in the form, where k is a nonnegative integer and aₖaₖ₋₁...a₀ are nonnegative integers less than b.

This representation of n is called the base b expansion of n and can be denoted by (aₖaₖ₋₁...a₀)b

Binary expansions
- Computers represent integers and do arithmetic with binary (base 2) expansions of integers. In these expansions, the digits used are 0 and 1.
- Example: What is the decimal expansion of the integer that has (11011)₂ as its binary expansion?
  Solution: (11011)₂ 
             = 1·2^4 + 1·2^3 + 0·2^2 + 1·2^1 + 1·2^0 
             = 16 + 8 + 0 + 2 + 1
             = 27

Base Conversion:
- To construct the base b expansion of the integer n, divide n by b to obtain a quotient and remainder: n = b·q₀ + a₀ where 0 ≤ a₀ < b. The remainder a₀ is the rightmost digit in the base b expansion of n.
- Next, divide q₀ by b to obtain: q₀ = b·q₁ + a₁ where 0 ≤ a₁ < b.
- Continue the process until the 2nd digit from the right in the base b expansion of n.
- Continue by successively dividing the quotient by b, obtaining the new quotient and remainder as the remainder. The process terminates when the quotient is 0.
```
Cache Cache on hit ond mss A is” quick» bt miss con chs For exanpe, if the cache miss cote is ord the data cache mas rate is 47, wilh base CPI of 2 ond a mis of (00 we cam the mss as Glows = mar 0.02 +100=2 = D-cache mss Cth 36% oF loads and 6.0¢ = Total 346 Ths in 0 CPT of 5.44 2+ wis Tn an ideal with a cache (no mises), He CPU cn al the CPT of 2. the CPL ths He CPU veld be 2.72 fe te menny Tf we CPL by halt, the CPL beams 4.44. Menory remain a of the overall CPI, shoving how the CPL aloe

**Caches**

In an ideal computing system there would be unlimited fast memory access. However such a system is not practically achievable. Instead a memory hierarchy provides the illusion of large amount of fast memory by organizing different types of storage to optimize speed and access.

The principle of locality refers to the observation that programs tend to access only a small portion of their address space at any given time, which crucial to optimizing the memory hierarchy There are 2 main types of locality.
1. **Temporal locality:** Refers to the tendency of program to access the same memory locations repeatedly within a short period. For example, instructions in loops and induction variables.
2. **Special locality:** Denotes the likelihood of accessing memory locations close to ones that are accessed. This caused in sequential instruction access and accessing array data.

Understanding these principles helps in designing cache systems and hardware to enhance performance.

**Memory Hierarchy Levels**
- Cache levels which include smaller faster memory
    - that is closer to the processor
- Data moves through the layers of memory from input and storage devices
    - where speed and energy are cheaper to fast memory tiers (like SSD or data to memory (DRAM)), and then to smaller, faster cache (SRAM) near the CPU.
    - Data is moved between levels in blocks, with many multiple units. This is a key concept in managing memory transitions.
- Caches are used to store frequently accessed data closer to the processor, minimizing access times and improving speed.

Cache memory is the closest level of memory hierarchy to the CPU. It serves to swiftly retrieve the most frequently or recently accessed data.

A hit occurs when accessed data is present in the upper memory level, a miss occurs when it is not found in the level cache and must be retrieved from lower levels of the hierarchy. Understanding these access patterns is crucial to optimizing cache performance and ensuring efficient data retrieval.
The image is completely blank, with no content to analyze or transcribe.
Control Signals

Datapath with Control 
Examples

Control Signal Overview

**Exceptions and Interrupts**

"Unexpected" events such as exceptions and interrupts require altering control flow. Exceptions occur within the CPU, e.g., undefined opcodes or overflows, while interrupts arise from external I/O controllers. For example, an I/O controller might send an interrupt when a disk finishes reading data, prompting the CPU to switch context to a waiting process.

In MIPS, exceptions are handled by the System Control Coprocessor (CP0), saving the program counter in the Exception Program Counter (EPC), indicating problems in the status register.

The exception handling process involves reading the cause, transferring control to the appropriate handler, and determining required actions. If resolvable, corrective measures are taken; otherwise, the program is terminated, using the EPC to correct errors.

Pipeline exceptions introduce forms of control hazards. For example, overflow during the execution stage requires prompting trap or service routine, flushing instructions and transferring control to a handler. This approach is similar to handling mispredicted control paths, though instruction overlapping in pipelines, simultaneous exceptions, complicates the handler. Exception handlers copy appropriate attributes to a typically slower off-chip memory.

Challenges arise when instructions depend on accelerator, caches, data hazards. Pitfalls in pipelining usually come from poor branch status, where a nearby branch is not mispredicted; pipelining harder to fix issues like unaligned memory. Addressing architectures unexpectedly change registers, adds instruction that depend on memory.
Block Diagram
1 scan
Combinatinal vs Sequential
1 scan
Block Diagram
1 scan
Combinatinal vs Sequential
1 scan

Logic Gates
3 scans
Adder
4 scans
Logic Gates
3 scans
Adder
4 scans

### Canonical Forms

Canonical forms are standardized ways to express Boolean Functions, making it easier to build and simplify circuits. The 2 main types are Sum of Products (SOP) and Product of Sums (POS), which describe when a circuit should output a 1 or a 0.

SOP expressions are built from minterms, which represent truth table rows where the output is 1, while POS expressions are built from maxterms, which represent rows where the output is 0.

#### Sum of Products:
- SOP uses minterms
- Look at rows where F=1 in the truth table
- Each 1 becomes an ANDed term (A'B'C)
- OR all AND terms together
  - For example, if F=1 at (A=0, B=1, C=0), the minterm is A'B'C'

#### Product of Sums:
- POS uses maxterms
- Look at rows where F=0 in the truth table
- Each 0 becomes an OR'ed term (A+B+C')
- AND all the OR terms together
  - For example, if F=0 at (A=1, B=0, C=1), the maxterm is A+B'C'


Here's the transcription of the handwritten notes:

---

**CPU Performance**

A clock cycle is a single tick of the CPU's internal clock, during which a basic instruction can be carried out. The CPU uses this regular pulse to synchronize and control the execution of instructions.

**Clock Period**: The time duration of one cycle  
**Clock Frequency**: How many cycles occur per second

**CPU Time** = Amount of CPU clock cycles × Clock Cycle Time (Period)  
**CPU Time** = Amount of CPU clock cycles / Clock Rate (Frequency)

Execution Time is further defined by instruction count, the total number of instructions a program executes, and Cycles Per Instruction (CPI). The CPI reflects how different instructions consume varied cycles which reflects the CPU's design, and is affected by the instruction mix (proportion of different types of instructions).

The computation of CPU performance involves the equation:  
CPU Time = Instruction Count × CPI × Clock Cycle  
This formula is important because it connects various core components of performance, offering insight into how efficiency can be optimized.

Components of performance include:  
- **Instruction Count**: The number of instructions executed by the CPU.  
- **Clock Cycle**: Typical document as part of system specification. It defines the duration of one cycle or clock phase in the CPU.  
- **Cycles Per Instruction (CPI)**: An average measurement reflecting the mean number of clock ticks per instruction considering the instruction mix, which is the frequency and type combination of instructions being executed.

CPI in more detail highlights the mixed usage where each instruction type frequency and cycle cost contributes to the overall CPI.

---

**CPI Example**

- A program contains:  
  * 50% ALU Ops, CPI per = 1  
  * 20% Load/Store, CPI per = 3  
  * 10% Branch, CPI per = 4  
  * 20% Others, CPI per = 2  

Average CPI = (0.5 × 1) + (0.2 × 3) + (0.1 × 4) + (0.2 × 2) = 1.8
**Transcription of Handwritten Notes:**

---

**Hazards**

Hazards are situations that prevent the next instruction in the pipeline from executing in the next cycle.

**Structure Hazards** arise when there is a conflict for the use of a resource. Load/Store operations require data access, causing the instruction fetch to stall until they are over.

**Data Hazards** occur when an instruction depends on the completion of data access by a previous instruction. For example, if the instructions use $t0, $t1 followed by sub $t2, $t0, $t3, the latter must wait for the former to complete.

**Forwarding (Bypassing)** passes a computed result from one stage to another, avoiding the wait for register storage and reduces stalls.

A load-use hazard occurs when an instruction depends on data being loaded by a previous instruction before it is available. They can always be avoided by forwarding. For example, ld  $t0, 0($t1) and sub $t2, $t0, $t3, the second instruction must wait for the ld unless resolved with forwarding.

**Code Scheduling** involves reordering instructions to avoid the use of a load result in the subsequent instruction.

**Stall on Branch:** To mitigate control hazards, waiting until the branch outcome is determined before fetching the instruction is an approach but it introduces stalls.

**Branch Prediction** guesses the outcome of branch instructions which helps decide whether to fetch the next instruction at branch target early.

**Predict branch-taken** reduces control hazard cost by assuming which is efficient when misprediction penalties are low.

**Delayed Branch** some branches are resolved late hence actions are predicted and if not taken.

---
**Transcription:**

---

**Writing**

A cache must manage how data is written. This involves deciding whether to update main memory immediately or delay a write, and how to handle write-miss. These choices affect consistency, performance and complexity.

When the CPU performs a store instruction, it writes data to memory. With a cache in place, this raises the issue of whether the write goes to cache, main memory, or both. If data is only written to the cache, main memory may have a different value, causing inconsistency.

Write Strategy:
- Write through updates both cache and main memory simultaneously. It's simple but slow. A write buffer is often used to reduce stalls.
- Write back only updates the data in the cache during a write hit; main memory is not updated right away. Each block is involved with a dirty bit to indicate if it has been modified since being loaded from memory. If a block is clean, it can be replaced without writing to memory. If a block is dirty, it must be written back to memory before being replaced.

---
Direct Caching

Associativity

Here's the transcription of the handwritten notes:

---

**Floating Point Arithmetic**

Real numbers are called "float" values in computing. Floating point arithmetic is the method computers use to handle real numbers.

Floats are represented using the IEEE 754 standard, which ensures accuracy by storing numbers using the principle of normalized scientific notation.

**IEEE 754** represents floating-point numbers using 3 components: a sign bit, an exponent, and a mantissa. To store numbers efficiently, IEEE 754 defines normalized form, meaning the first digit before the decimal is always 1 in binary (1.XXX × 2^Y).

Since this leading 1 is always present, IEEE 754 does not store it explicitly (this is called the hidden bit). Instead, only the fractional part is stored, allowing the mantissa to hold more precision within the available bits.

This differs from standard scientific notation where the leading digit is always explicitly written (e.g. 1.23 × 10^3 in decimal). By enforcing normalization and using a hidden bit, IEEE gives efficient storage and greater accuracy in floating point precision.

**A floating point number is always composed of:**
- **1 sign bit (S):** determines whether the number is positive (0) or negative (1).
- **Exponent (E):** determines how much to shift the binary point (stored using a biased format). 
- **Mantissa (M):** the fractional part stored in binary (with an assumed 1).

---

The text includes headers and sub-sections, and uses italics and bold formatting in specific areas to emphasize certain points.
  MAC2311 Name: Linear Worksheet F Summary    ‘This worksheet is graded on completion, You must complete the entire worksheet to eam any credit. You ‘answers do not have to be correct. Of course, it is better i they are, but the purpose of the this workshect isthe you master the material, Ifyou arent sure about the mathematical steps, you can the process or support your solution by writing an explanation. [Avalue of sinh x or cosh xis given. Use the definitions and the identity find the value ofthe other indicated hyperbolic function,     4 (c_) 5 5 ag    Rewrite the expression in terms of exponentials and simplify the results.              | 4) (sinh x + cosh x)> ane | of ne Find the derivative ofy. (ry x8 — | Dp ol)   cosh D) 7x |    

        (sinh 9x) 1 Find the derivative of y with respect to the appropriate variable. ofA 9 B y= (0 +4) » (8 +50 006 (04) | bd | ax |   1) Verify the identity using the definitions of hyperbolic functions. 1 coth x = 12) Use the fundamental identity cosh2 x ~ sinh? x= 1 to verify the identity. tanh? x = sech? x 13) Derive the formula given that (cosh x) = sinh x and (sinh x) = cosh x. (coth x) = x

Find the linearization L(x) of f(x) at x= a. 1 f(x) = 3x2        |     the relationship between a small change in x and the corresponding change in y in the form dy = dx.              Use the differential to approximate the quantity to four decimal places. 1) In 1.07 | | 19) raised to the power 0.49) »(D 20) | 8) 10.1000 99300 1) 11.0000

Answer Key ‘Testname; MAC 2311 CANVAS WS #6 - HYBERBOLICS & LINEAR APPROXIMATIONS ye 2A 3)A aA              4 coy) wa

Certainly! Here is the transcription of the handwritten notes:

---

**Mac 8311**  
Hyperbolics & Linear Approx.  
Worksheet #5A  

**Solutions**

1. 

\[
\sinh(x) = -\frac{4}{3}
\]

\[
\cosh(x)^2 - \sinh(x)^2 = 1
\]

\[
\cosh(x)^2 - \left(-\frac{4}{3}\right)^2 = 1
\]

\[
\cosh(x)^2 - \frac{16}{9} = 1
\]

\[
\cosh(x)^2 = 1+\frac{16}{9} = \frac{9}{9} + \frac{16}{9} = \frac{25}{9}
\]

\[
\cosh(x) = \pm\frac{5}{3} \Rightarrow \frac{5}{3}
\]

\[
\boxed{C}
\]

Our goal: \(\tanh(x)\)

**Identity**

\[
\tanh(x) = \frac{\sinh(x)}{\cosh(x)}
\]

\[
\tanh(x) = \frac{-\frac{4}{3}}{\frac{5}{3}}
\]

\[
\tanh(x) = -\frac{4}{5}
\]

2.

\[
\sinh(x) = \frac{8}{15}
\]

Goal: \(\sech(x)\)

\[
\cosh(x)^2 - \sinh(x)^2 = 1
\]

\[
\cosh(x)^2 - \left(\frac{8}{15}\right)^2 = 1
\]

\[
\cosh(x)^2 - \frac{64}{225} = 1
\]

\[
\cosh(x)^2 = 1 + \frac{64}{225} = \frac{225}{225} + \frac{64}{225} = \frac{289}{225}
\]

\[
\cosh(x) = \pm \frac{17}{15} \Rightarrow \frac{17}{15}
\]

\[
\sech(x) = \frac{1}{\cosh(x)}
\]

\[
\sech(x) = \frac{15}{17}
\]

\[
\boxed{A}
\]

---
The image contains handwritten notes with mathematical expressions. Here is the transcription:

---

3. \[ \sinh(4 \frac{x}{a}) \]

\[
\text{defn} \quad \sinh(x) = \frac{e^x - e^{-x}}{2}
\]

\[
\sinh(4 \frac{x}{a}) = \frac{e^{\frac{4x}{a}} - e^{-\frac{4x}{a}}}{2}
\]

\[
=  \frac{e^{\frac{4x}{a}} - e^{-{\frac{4x}{a}}}}{a} = \frac{x^4 - x^{-4}}{a(x^4 - x^{-4})}
\]
\[
\boxed{A}
\]

4. \[ \left( \sinh(x) + \cosh(x) \right)^3 \]

\[
\sinh(x) = \frac{e^x - e^{-x}}{2} \quad \cosh(x) = \frac{e^x + e^{-x}}{2}
\]

\[
\frac{x^6 - x^{-6}}{a^2} + \frac{x^6 - x^{-6}}{a^2} = \frac{e^{3x}}{a}
\]
\[
\boxed{A}
\]

5. \[ y = \cosh(g(x)) \]

\[
\frac{d}{dx} (\cosh(g(x))) = \sinh(g(x)) \cdot g'(x)
\]

\[
y' = \sinh(x^5) \cdot 5x^4 = 5x^4 \sinh(x^5)
\]
\[
\boxed{C}
\]

---
The image contains handwritten notes, likely related to calculus, involving derivatives of hyperbolic and logarithmic functions. Here is the transcription of the text:

---

6. \[ y = \sinh^2(7x) = (\sinh(7x))^2 \]

\[ \frac{d}{dx} (\sinh(g(x))) = \cosh(g(x)) \cdot g'(x) \]

\[ y' = 2(\sinh(7x)) \cdot \frac{1}{\cosh(7x)} \cdot 7 \]

\[ y' = 14\cosh(7x)\sinh(7x) \quad \boxed{D} \]

---

7. \[ y = \ln(\sinh(x)) \]

\[ y' = \frac{1}{\sinh(x)} \cdot \frac{d}{dx}(\sinh(x)) \]

\[ y' = \frac{1}{\sinh(x)} \cdot \cosh(x) \cdot 9 \]

\[ y' = \frac{9 \cosh(x)}{\sinh(x)} = 9 \coth(x) \quad \boxed{B} \]

---

2. \[ y = \sinh^{-1}(g(x)) \]

\[ \frac{d}{dx}(\sinh^{-1}(g(x))) = \frac{1}{\sqrt{1+(g(x))^2}} \cdot g'(x) \]

\[ y' = \frac{1}{\sqrt{1+(ax)^2}} = \frac{d}{dx}(ax)^{\frac{1}{2}} \]

--- 

The equations involve differentiation rules for hyperbolic functions and logarithms, with specific steps to find the derivatives of given functions. The numbers in circles and boxes likely denote question numbers and answers.
Here is the transcription of the handwritten notes:

---

3. \(\boxed{\text{continued}}\)

\[ y' = \frac{1}{\sqrt{1+9x}} \cdot \frac{-1}{2} (9x)^{-\frac{1}{2}} \cdot 9 \]

\[ y' = \frac{-9}{2\sqrt{1+9x}} \quad \frac{-9}{2\sqrt{x}} \]

\[ y' = \frac{9x}{2\sqrt{1+9x}} \quad \frac{9}{2x(4 \cdot 9x)} \]

---

4. \(\boxed{y = (20 + 5 \theta) \tanh^{-1} (\theta + 4)}\)  \(\boxed{\text{product rule}}\)

\[ \frac{d}{dx} \left( \tanh^{-1}(hx) \right) = \frac{1}{1-(hx)^2} \cdot h(x) \]

\[ f' = (20 + 5 \theta) \quad g' = \frac{d}{d \theta} \left( \frac{\theta}{1-(\theta+4)^2} \right) \]

\[ y' = (20 + 5) \tanh^{-1} (\theta+4) + \frac{\theta + 5}{1-(\theta+4)^2} \]

\[ = (20 + 5) \tanh^{-1} (\theta + 4) + \frac{\theta (1-\theta^2)}{\theta - (20 + 16)} \]

\[ = \theta - 30 = -15 \]

--- 

This transcription includes all the mathematical equations and annotations as presented in the handwritten notes, maintaining the integrity and layout of the original content.
The image contains handwritten notes with mathematical content. Below is the transcription:

---

9 continued

\( y' = \frac{-(20+5)\cdot \tanh \prime (\theta + 4) + \Theta (10+5)}{(e^{\theta} + 5)} \)

\[ \frac{-(20+5)\cdot \tanh \prime (\theta + 4)}{\theta + 5} \, \boxed{B} \]

10

\( y = 9 \cdot \tanh^{-1}(\cos x) \)

\( \frac{d}{dx} \tanh^{-1} (hx) = \frac{1}{1-(hx)^2} \cdot h \, (x) \)

\( y = 9 \cdot \frac{1}{1 - (\cos x)^2} \cdot \frac{d}{dx} (\cos x) \)

\( = \frac{-\sin x}{-\cos x} \)

\( y' = \frac{-9 \sin x}{\sin x} \quad \boxed{B} \)

11

\( \coth(x) = \frac{e^x + e^{-x}}{e^x - e^{-x}} \quad \text{verify the identity} \)

\( \coth(x) = \frac{\cosh(x)}{\sinh(x)} = \frac{x^2 + e^x}{x^2 - e^x} \)

\[ = \frac{e^x + e^{-x}}{e^x - e^{-x}} = \frac{e^x}{e^x - e^{-x}} - \frac{e^{-x}}{e^x - e^{-x}} = \frac{e^x}{e^x - e^{-x}} \]

---
The image contains handwritten mathematical notes with calculations and identities related to hyperbolic functions. Here's the transcription:

---

11. continued

\[ e^x - e^{-x} = \frac{e^x}{e^{x}} - \frac{1}{e^{x}} \rightarrow \left( \frac{2x}{e^x} = -1 \right) \]

---

12. Verify the identity

\[ 1 - \tanh^2(x) = \text{sech}^2(x) \]

\[ 1 - \frac{\sinh^2(x)}{\cosh^2(x)} = \frac{1}{\cosh^2(x)} \]

\[ \frac{\cosh^2(x) - \sinh^2(x)}{\cosh^2(x)} = \frac{1}{\cosh^2(x)} \]

\[ \cosh^2(x) - \sinh^2(x) = 1 \]

use

\[ \cosh^2(x) - \sinh^2(x) = 1 \]

\[ \frac{1}{\cosh^2(x)} = \text{sech}^2(x) \]

---

13. Verify

\[ \frac{d}{dx} (\coth(x)) = -\text{csch}^2(x) \]

Using the quotient rule:

\[ f = \cosh(x) \quad g = \sinh(x) \]

\[ f' = \sinh(x) \quad g' = \cosh(x) \]

\[ \frac{d}{dx} \left(\frac{\cosh(x)}{\sinh(x)}\right) = \frac{\sinh(x)\cosh(x) - \cosh(x)\sinh(x)}{\sinh^2(x)} \]

\[ = \frac{0}{\sinh^2(x)} = \frac{-1}{\sinh^2(x)} \]

\[ = -\text{csch}^2(x) \]

--- 

These notes involve verifying and deriving identities and derivatives related to hyperbolic functions, particularly focusing on hyperbolic cotangent and cosine functions.
Here is the transcription of the handwritten notes:

---

Find the linearization (tangent line approximation)

L(x) = f(a) + f'(a)(x - a)

14) \[f(x) = 3x^2 + 4x + 1 \text{ with } a = 3\]
\[
f'(x) = 6x + 4
\]

\[
f(a) = 3(3)^2 + 4(3) + 1 = 40
\]

\[
f(3) = 40 \Rightarrow f(3.1) = 40\]
\[
\]

\[
f'(a) = f'(3) = 6(3) + 4 = 22
\]

L(x) = f(a) + f'(a)(x - a)

L(x) = 40 + 22(x - 3)

\[
= 40 + 22x - 66 \Rightarrow L(x) = 22x - 26 \quad (A)
\]

15) \[f(x) = \sqrt{4x + 49} = (4x + 49)^{1/2} \quad a = 0\]

\[f'(x) = \frac{1}{2}(4x + 49)^{-1/2}(4) = \frac{2}{\sqrt{4x + 49}}
\]

\[f(0) = \sqrt{4(0) + 49} = \sqrt{49} = 7\]

\[
f'(0) = \frac{2}{\sqrt{4(0) + 49}} = \frac{2}{\sqrt{49}} = \frac{2}{7}
\]

L(x) = f(0) + f'(0)(x - 0)
L(x) = 7 + \left(\frac{2}{7}\right) x

\[
L(x) = \frac{2}{7}x + 7 \quad (B)
\]

---
The image contains handwritten notes related to calculus. Here is the transcription:

---

\[ y = f(x) \rightarrow \frac{dy}{dx} = f'(x) \rightarrow dy = f'(x) dx \]

\( dx \, \& \, dy \, \text{represent small changes in} \, x \, \& \, y. \)

\[ 16 \]
   \[ y = 5x - 2x \rightarrow \]
   \[ \frac{dy}{dx} = 10x - 2 \]
   \[ dy = (10x - 2) dx \]

\[ 17 \]
   \[ y = \frac{1}{2} 5x + 8 \]
   \((\text{product rule}) f(x) = g \cdot f\)
   \[ f_1(x) = \left(\frac{5x + 8}{2} \cdot \frac{1}{2}\right)' = \frac{5}{2(5x+8)} \]
   \[ f' = \frac{1}{2} \bigg(\frac{5x + 8}{2}\bigg)^1 (\text{product rule}) \]

\[ \frac{dy}{dx} = \frac{(5x + 8) \cdot \frac{1}{2} \cdot 5x \cdot \frac{1}{2}}{2(5x + 8)} + \frac{5x}{2(5x + 8)} \]

\[ \frac{dy}{dx} = \frac{2(5x + 8)}{2(5x + 8)} + \frac{5}{2(5x + 8)} \]

\[ \frac{dy}{dx} = \frac{10x - 2}{2(5x + 8)} = \frac{10x + 16 - 5x}{2(5x + 8)} \]

\[ \frac{dy}{dx} = \frac{15x + 16}{2(5x + 8)} \]

\[ dy = \frac{15x + 16}{2(5x + 8)} dx \]

--- 

These notes describe the differentiation process and the use of the product rule in calculus.
Here is the transcription of the handwritten notes in the image:

---

Use Differentials for Approximations

**option #1** Find the linearization  
    1) Identify the function f(x)  
    determine a  

**option #2** Use \[ dy = f'(x) \] to see how a small change in x affects y.  

Approximate \[ \ln(1.07) \]  

**option #1**

\[ L(x) \approx f(a) + f'(a)(x-a) \]

\[ f(x) = \ln x \]

\[ f(a) = \ln(1) = 0 \]

\[ f'(x) = \frac{1}{x} \]

\[ f'(a) = \frac{1}{1} = 1 \]

\[ a = 1 \] (closest perfect value)

So 

\[ f(x) \approx f(a) + f'(a)(x - a) \]

\[ f(x) \approx \ln(1) + 1(x - 1) \]

\[ f(x) \approx x - 1 \]

\[ \text{Use this } \Rightarrow \text{we need } x = 1.07 \]

\[ f(1.07) \approx 1.07 - 1 = 0.07 \]

\[ \boxed{C} \]

---
