Introduction MIPS ISA 3 Instruction Types R-type, I-type, J-type » Datapath and Control Unit Simplified Pipelined Simple subset » Memory reference: Iw, sw Arithmetic/logical: add, addi, sub, and, or, slit Control transfer: j Instruction Format Review Three instruction formats 6 6 Retype [ rs [ rt funct_| 48 5 bits,

---

sign- | 22 MemRead PROCESSOR DATAPATH Introduction • MIPS ISA • 3 Instruction Types • R-type, I-type, J-type • Datapath and Control Unit • Simplified • Pipelined • Simple subset • Memory reference: lw, sw • Arithmetic/logical: add, addi, sub, and, or, slt • Control transfer: beq, j Instruction Format

---

write one register • Memory-reference instructions read one register • Also access data memory Processor Overview Data “flows” through memory and functional units Processor Overview Can’t just join wires together Use multiplexers Processor Overview Multiplexers require selection signals Control Signals Signals • Information encoded in binary • Low voltage =

---

0, High voltage = 1 • One wire per bit • Multi-bit data encoded on multi-wire buses Logic Design Review • Combinational Circuits • Output depends only on current input • Operate on data • Example: ALU • Given the same input a combinational circuit will always produce the same

---

output Logic Design Review • Sequential Circuits • Have “state” • Output depends on current input and previous outputs • Example: Register File • Output depends on the contents of the registers in the file MIPS Register File • 32 32-bit registers • One write bus • Two read buses

---

• Selection Inputs • RegWrite (write enable signal) • Reg. Source A • Reg. Source B • Reg. Destination Write Control Signals Every Clock Cycle • We do not show a write control signal when a state element is written on every active clock edge. • Program Counter When Necessary

---

• If a state element is not updated on every clock, then an explicit write control signal is required. • Register File Datapath Elements • Most elements have 32-bit wide inputs and outputs • Buses labeled with their width Datapath Elements - Combinational I0 I1 Y M u x S

---

<< 2 Single Datapath • All instructions executed in one clock cycle • Each datapath element can only do one function at a time • Any element needed more than once must be duplicated • Hence, we need separate instruction and data memories • Use multiplexers where alternate data sources