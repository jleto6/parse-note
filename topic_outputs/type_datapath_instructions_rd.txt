computation altogether. Datapath Ad Read register 1 n ALU operation sn ata 1 8 | sign- | 22 MemRead PROCESSOR DATAPATH Introduction • MIPS ISA • 3 Instruction Types • R-type, I-type, J-type • Datapath and Control Unit • Simplified • Pipelined • Simple subset • Memory reference: lw, sw

---

• Arithmetic/logical: add, addi, sub, and, or, slt • Control transfer: beq, j Instruction Format Review • Three instruction formats • R-type • I-type • J-type • Fields: • op: operation of the instruction • rs, rt, rd: source/destination register specifiers • shamt: shift amount • funct: selects variant of

---

bits 5 bits 5 bits 5 bits op rs rt immediate 0 16 21 26 31 6 bits 16 bits 5 bits 5 bits MIPS Subset • Add, Subtract, AND, OR, SLT • add rd, rs, rt • sub rd, rs, rt • and rd, rs, rt • or rd,

---

labeled with their width Datapath Elements - Combinational I0 I1 Y M u x S Multiplexer Y = S ? I1 : I0 A B Y + A B Y ALU F Adder Y = A + B Arithmetic/Logic Unit Y = F(A, B) Datapath Elements - Sequential Fetch Elements

---

• Memory Unit • Program Counter • Adder R-Type Instructions • Read two register operands • Perform arithmetic/logical operation • Write register result R-Type Instructions add $t1, $t2, $t3 • RW = 9 • RA = 10 • RB = 11 • ALUop = “add” Datapath: R-Type Instructions I-Type Instructions

---

• Replace one read register, shamt, and funct with 16 bit constant • ALU requires 32-bit inputs • Sign-extend the 16 bit immediate • Fill with 0s if the constant is positive • Fill with 1s if the constant is negative • Choose between the second read registers and the

---

sign extended constant. Datapath: I-Type Instructions Load/Store Instructions • lw $t1, offset($t2) • sw $t1, offset($t2) • Compute memory address: $t2 + offset • Since offset is 16 bits, it needs to be extended to 32 bits Load/Store Instructions • Load: Read memory and update register • Store: Write register