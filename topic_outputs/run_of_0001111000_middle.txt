6 x = 4x + 2x or 6x = – 2x + 8 x • 111 = 1000 – 0001 • 1111 = 10000 – 00001 • 1111XXX = 10000XXX – 00001XXX Insight for Booth’s Algorithm • Replace string of 1s in multiplier with • initially subtract when we see

---

00001100 • Effectively: 2 x 6 = 2 x 8 – 2 x 2 Booth’s Algorithm Current Right Explanation Example 1 0 Beginning of a run of 1s 0001111000 1 1 Middle of a run of 1s 0001111000 0 1 End of a run of 1s 0001111000 0 0 Middle

---

of a run of 0s 0001111000 0 1 1 1 1 0 beginning of run end of run middle of run Booth’s Algorithm 1. Depending on the current and previous bits, do one of the following: 00: Middle of a string of 0s, so no arithmetic operations. 01: End of

---

0011 110(1 0) 0 Start string: Subtract => add 0110 4 2 0001 1110 1 Shift arithmetic Notes: 1. Multiplier in Product Register is underlined. 2. Current/previous bits are in parentheses. 3. Previous bit is initialized to 0 Booth’s Algorithm • Originally for speed: Shifts are faster than add •