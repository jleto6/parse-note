on a write miss?
• Alternatives for write-through
• Allocate on miss: fetch the block
• Write around: don’t fetch the block
• Since programs often write a whole block before reading it (e.g., initialization)
• For write-back
• Usually fetch the block

Performance
• The time to service hits and misses affects the CPU time.
• Hit time
• time required to access the cache
• includes time to determine if it’s a hit or a miss
• Miss penalty
• time required to fetch a block from the next lowest level
• Hit time < Miss penalty

Measuring Cache Performance
• Components of CPU time
• Program execution cycles
• Includes cache hit time
• Memory stall cycles
• Mainly from cache misses
• CPU time = (CPU cycles + Memory-stall cycles) * Clock cycle time
• Memory-stall cycles = Read-stall cycles + Write-stall cycles
• Read-stall cycles = Reads/Program * Read miss rate * Read miss penalty
• Write-stall cycles = (Writes/Program * write miss rate * write miss penalty) + Write buffer stalls

Measuring Cache Performance
• Components of CPU time
• Program execution cycles
• Includes cache hit time
• Memory stall cycles
• Mainly from cache misses
penalty
 
Miss
n
Instructio
Misses
Program
ns
Instructio
penalty
 
Miss
rate
 
Miss
Program
accesses
Memory 
cycles
 
stall
Memory 
  


=


=

Cache Performance Example
• Assume an instruction cache miss rate for a program is 2% and a data cache 
miss rate is 4%. If a processor has a CPI of 2 without any memory stalls and 
the miss penalty is 100 cycles for all misses, determine how much faster a 
processor would run with a perfect cache that never missed.  Assume the 
frequency of all loads and stores is 36%.

Cache Performance Example
• Given
• I-cache miss rate = 2%
• D-cache miss rate = 4%
• Base CPI (ideal cache) = 2
• Miss penalty = 100 cycles
• Load & stores are 36% of instructions

Cache Performance Example
• Given
• I-cache miss rate = 2%
• D-cache miss rate = 4%
• Base CPI (ideal cache) = 2
• Miss penalty = 100 cycles
• Load & stores are 36% of instructions
• Determine miss cycles per instruction
• I-cache: 
0.02 × 100 = 2
• D-cache: 
0.36 × 0.04 × 100 = 1.44
• Memory miss cycles = 2 + 1.44 = 3.44

Cache Performance Example
• Given
• I-cache miss rate = 2%
• D-cache miss rate = 4%
• Base CPI (ideal cache) = 2
• Miss penalty = 100 cycles
• Load & stores are 36% of instructions
• Determine miss cycles per instruction
• I-cache: 
0.02 × 100 = 2
• D-cache: 
0.36 × 0.04 × 100 = 1.44
• Memory miss cycles = 2 + 1.44 = 3.44
• Actual CPI = 2 + 3.44 = 5.44

Cache Performance Example
• Given
• I-cache miss rate = 2%
• D-cache miss rate = 4%
• Base CPI (ideal cache) = 2
• Miss penalty = 100 cycles
• Load & stores are 36% of instructions
• Determine miss cycles per instruction
• I-cache: 
0.02 × 100 = 2
• D-cache: 
0.36 × 0.04 × 100 = 1.44
• Memory miss cycles = 2 + 1.44 = 3.44
• Actual CPI = 2 + 3.44 = 5.44
• Ideal CPU is 5.44/2 =2.72 times faster

Performance Considerations
• What happens if the processor is made faster, but the memory system is not?  
• The amount 