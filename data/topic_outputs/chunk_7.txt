constant.

Datapath: I-Type Instructions

Load/Store Instructions
• lw 
$t1, offset($t2)
• sw 
$t1, offset($t2)
• Compute memory address: $t2 + offset
• Since offset is 16 bits, it needs to be extended to 32 bits

Load/Store Instructions
• Load: Read memory and update register
• Store: Write register value to memory
• Elements: 
• Register file
• Sign extension unit
• Data memory unit

Datapath: Load Instruction

Datapath: Store Instruction

Branch Instructions
beq
$t1, $t2, offset
• Read register operands
• Compare operands
• Use ALU, subtract and check Zero output
• Calculate target address
• Sign-extend displacement
• Shift left 2 places (word displacement)
• Add to PC + 4
• Already calculated by instruction fetch

Target Address Details
• The base for the branch address calculation is the 
address of the instruction following the branch. 
• PC+4
• Memory is byte addressed 
• The offset field must be shifted left 2 bits

Branch Instructions
Just
re-routes 
wires
Sign-bit wire 
replicated

Branching
beq
$t1, $t2, offset
• Branch is taken
• When $t1 - $t2 = 0, the zero signal from the ALU
• PC = PC + 4 + 4*offset
• Branch is not taken
• PC = PC + 4

Datapath: Branch

Jump Instructions
• PC = PC[31-28] : Offset << 2

Single Datapath
• All instructions executed in one clock cycle
• Each datapath element can only do one function at a time
• Any element needed more than once must be duplicated
• Hence, we need separate instruction and data memories
• Use multiplexers where alternate data sources are used 
for different instructions

Control Unit
• Take in input
• Generate signals for each state element
• Generate selection signals for each multiplexor
• Generate function signals for ALU
• ALU Control

ALU Control
• MIPS subset: lw, sw, beq, add, addi, sub, and, or, slt
• ALU has 4 control inputs
• 16 possible functions
ALU Control
Function
0000
AND
0001
OR
0010
Add
0110
Subtract
0111
Set-on-less-than
1100
NOR

ALU Control
• Load/Store: add
• Branch: subtract
• R-type: depends on funct field
ALU Control
Function
0000
AND
0001
OR
0010
Add
0110
Subtract
0111
Set-on-less-than
1100
NOR

ALU Control
• Opcode determines which type of instruction
• The ALUOp is a 2-bit signal derived from this Opcode
• ALUOp and the funct field will determine ALU control
Opcode
ALUOp
Operation
Funct
ALU function
ALU Control
Lw
00
Load word
XXXXXX
Add
0010
Sw
00
Store word
XXXXXX
Add
0010
Beq
01
Branch
XXXXXX
Subtract
0110
R-type
10
Add
100000
Add
0010
Subtract
100010
Subtract
0110
AND
100100
AND
0000
OR
100101
OR
0001
Set-on-Less-
Than
101010
Set-on-Less-
Than
0111

ALU Control
• Multiple levels of decoding:
• Main Control generates ALUOp
• ALUOp and funct bits determine ALU Control

ALU Control
• ALUOp and funct bits determine ALU Control
ALUOp1
ALUOp2
Funct
Operation
0
0
X
X
X
X
X
X
0010 (add)
X
1
X
X
X
X
X
X
0110 (subtract)
1
X
X
X
0
0
0
0
0010 (add)
1
X
X
X
0
0
1
0
0110 (subtract)
1
X
X
X
0
1
0
0
0000 (and)
1
X
X
X
0
1
0
1
0001 (or)
1
X
X
X
1
0
1
0
0111 (slt)

The Main Control Unit
• Control signals derived from instruction
0
rs
rt
rd
shamt
funct
31:26
5:0
25:21
20:16
15:11
10:6
35 or 43
rs
rt
address
31:26
25:21
20:16
15:0
4
rs
rt
address
31:26
25:21
20:16
15:0
R-type
Load/
Store
Branch
opcode
always 
read
read, 
except 
for load
write for 
R-type 
and load
sign-extend 
and add

Main Control Unit
• Observations
• The opcode is always contained in bits 31:26. We will refer to this 
field as Op[5:0].
• The two registers to be read are always specified by the rs and rt 
fields, at positions 25:21 and 20:16. This is true for the R-type 
instructions, branch equal, and for store. 
• The base register for load and store instructions is always in bit 
positions 25:21 (rs). 
• The 16-bit offset for branch equal, load, and store is always in 
positions 15:0. 
• The destination register is in one of two places. 
• For a load it is in bit positions 20:16 (rt)
• For an R-type instruction it is in bit positions 15:11 (rd)
• We will need to add a multiplexor to select which field of the instruction is used 
to indicate the register number to be written.

Datapath with ALU Control

Control Signals – Register Destination
• 