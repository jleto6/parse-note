10110 22 110 • 11010 26 010 • 10110 22 110 • 11010 26 010 • 10000 16 000 • 00011 3 011 • 10000 16 000 • 10010 18 010 • 10000 16 000 Cache Example • Initial state Index V Tag Data 000 N 001 N 010 N

---

011 N 100 N 101 N 110 N 111 N Cache Example Index V Tag Data 000 N 001 N 010 N 011 N 100 N 101 N 110 Y 10 Mem[10110] 111 N Word addr Binary addr Hit/miss Cache block 22 10 110 Miss 110 Cache Example Index V

---

Tag Data 000 N 001 N 010 Y 11 Mem[11010] 011 N 100 N 101 N 110 Y 10 Mem[10110] 111 N Word addr Binary addr Hit/miss Cache block 26 11 010 Miss 010 Cache Example Index V Tag Data 000 N 001 N 010 Y 11 Mem[11010] 011 N

---

100 N 101 N 110 Y 10 Mem[10110] 111 N Word addr Binary addr Hit/miss Cache block 22 10 110 Hit 110 26 11 010 Hit 010 Cache Example Index V Tag Data 000 Y 10 Mem[10000] 001 N 010 Y 11 Mem[11010] 011 Y 00 Mem[00011] 100 N 101

---

N 110 Y 10 Mem[10110] 111 N Word addr Binary addr Hit/miss Cache block 16 10 000 Miss 000 3 00 011 Miss 011 16 10 000 Hit 000 Cache Example Index V Tag Data 000 Y 10 Mem[10000] 001 N 010 Y 10 Mem[10010] 011 Y 00 Mem[00011] 100

---

N 101 N 110 Y 10 Mem[10110] 111 N Word addr Binary addr Hit/miss Cache block 18 10 010 Miss 010 Address Subdivision Cache Hit • Index of the address specifies cache block • If the valid bit indicates data is present, check the tags • If the tags match,

---

the data portion of the entry, writing the upper bits of the address (from the ALU) into the tag field, and turning the valid bit on. 4. Restart the instruction execution at the first step, which will refetch the instruction, this time finding it in the cache. Cache Miss •