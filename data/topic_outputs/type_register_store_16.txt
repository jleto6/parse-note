R-type • I-type • J-type • Fields: • op: operation of the instruction • rs, rt, rd: source/destination register specifiers • shamt: shift amount • funct: selects variant of the operation in the “op” field • address/immediate: address offset or immediate value • target address: target address of the jump

---

• Execute: • Depending on instruction class, we use the ALU to calculate: • Arithmetic result • Memory address for load/store • Branch target address Instruction Execution • To read and write registers, we need a register file • R-types read two registers and write one register • Memory-reference instructions

---

: I0 A B Y + A B Y ALU F Adder Y = A + B Arithmetic/Logic Unit Y = F(A, B) Datapath Elements - Sequential Fetch Elements • Memory Unit • Program Counter • Adder R-Type Instructions • Read two register operands • Perform arithmetic/logical operation • Write

---

register result R-Type Instructions add $t1, $t2, $t3 • RW = 9 • RA = 10 • RB = 11 • ALUop = “add” Datapath: R-Type Instructions I-Type Instructions • Replace one read register, shamt, and funct with 16 bit constant • ALU requires 32-bit inputs • Sign-extend the 16

---

bit immediate • Fill with 0s if the constant is positive • Fill with 1s if the constant is negative • Choose between the second read registers and the sign extended constant. Datapath: I-Type Instructions Load/Store Instructions • lw $t1, offset($t2) • sw $t1, offset($t2) • Compute memory address: $t2

---

+ offset • Since offset is 16 bits, it needs to be extended to 32 bits Load/Store Instructions • Load: Read memory and update register • Store: Write register value to memory • Elements: • Register file • Sign extension unit • Data memory unit Datapath: Load Instruction Datapath: Store

---

25:21 20:16 15:11 10:6 35 or 43 rs rt address 31:26 25:21 20:16 15:0 4 rs rt address 31:26 25:21 20:16 15:0 R-type Load/ Store Branch opcode always read read, except for load write for R-type and load sign-extend and add Main Control Unit • Observations • The opcode is

---

always contained in bits 31:26. We will refer to this field as Op[5:0]. • The two registers to be read are always specified by the rs and rt fields, at positions 25:21 and 20:16. This is true for the R-type instructions, branch equal, and for store. • The base register

---

for load and store instructions is always in bit positions 25:21 (rs). • The 16-bit offset for branch equal, load, and store is always in positions 15:0. • The destination register is in one of two places. • For a load it is in bit positions 20:16 (rt) • For

---

an R-type instruction it is in bit positions 15:11 (rd) • We will need to add a multiplexor to select which field of the instruction is used to indicate the register number to be written. Datapath with ALU Control Control Signals – Register Destination • RegDst • Deasserted: the register